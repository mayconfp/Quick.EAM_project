# Generated by Django 5.1.4 on 2025-03-01 21:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import usuarios.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChaveModelo',
            fields=[
                ('cod_chave', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CicloPadrao',
            fields=[
                ('cod_ciclo', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=255)),
                ('intervalo_dias', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Criticidade',
            fields=[
                ('cod_criticidade', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=255)),
                ('nivel', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Especialidade',
            fields=[
                ('cod_especialidade', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(help_text='E-mail obrigatório para cadastro', max_length=220, unique=True)),
                ('cnpj', models.CharField(blank=True, help_text='CNPJ do usuário (opcional).', max_length=18, null=True, unique=True)),
                ('profile_picture', models.ImageField(blank=True, help_text='Foto do perfil do usuário.', null=True, upload_to=usuarios.models.user_profile_picture_path)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('cod_categoria', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=255, null=True)),
                ('descricao_en', models.CharField(blank=True, max_length=255, null=True)),
                ('descricao_pt_br', models.CharField(blank=True, max_length=255, null=True)),
                ('descricao_es', models.CharField(blank=True, max_length=255, null=True)),
                ('cod_categoria_pai', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategorias', to='usuarios.categoria')),
            ],
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Nova Conversa', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CategoriaLang',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cod_idioma', models.CharField(max_length=2)),
                ('descricao', models.CharField(max_length=255)),
                ('cod_categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traducoes', to='usuarios.categoria')),
            ],
            options={
                'unique_together': {('cod_categoria', 'cod_idioma')},
            },
        ),
        migrations.CreateModel(
            name='ChatHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('ia_used', models.CharField(choices=[('GPT', 'GPT'), ('Llama', 'Llama'), ('Gemini', 'Gemini')], default='GPT', max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='usuarios.chatsession')),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'timestamp'], name='usuarios_ch_user_id_887528_idx')],
            },
        ),
        migrations.CreateModel(
            name='MatrizPadraoAtividade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cod_categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.categoria')),
                ('cod_especialidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.especialidade')),
            ],
            options={
                'unique_together': {('cod_categoria', 'cod_especialidade')},
            },
        ),
    ]
